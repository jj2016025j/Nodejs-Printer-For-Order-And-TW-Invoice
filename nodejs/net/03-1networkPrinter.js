const escpos = require('escpos');
escpos.Network = require('escpos-network');

const networkDevice = new escpos.Network('192.168.1.175', 8080);
console.log(networkDevice);
// Network {
//     _events: [Object: null prototype] {},
//     _eventsCount: 0,
//     _maxListeners: undefined,
//     address: '192.168.1.175',
//     port: 8080,
//     device: Socket {
//       connecting: false,
//       _hadError: false,
//       _parent: null,
//       _host: null,
//       _closeAfterHandlingError: false,
//       _readableState: ReadableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         buffer: BufferList { head: null, tail: null, length: 0 },
//         length: 0,
//         pipes: [],
//         flowing: null,
//         ended: false,
//         endEmitted: false,
//         reading: false,
//         constructed: true,
//         sync: true,
//         needReadable: false,
//         emittedReadable: false,
//         readableListening: false,
//         resumeScheduled: false,
//         errorEmitted: false,
//         emitClose: false,
//         autoDestroy: true,
//         destroyed: false,
//         errored: null,
//         closed: false,
//         closeEmitted: false,
//         defaultEncoding: 'utf8',
//         awaitDrainWriters: null,
//         multiAwaitDrain: false,
//         readingMore: false,
//         dataEmitted: false,
//         decoder: null,
//         encoding: null,
//         [Symbol(kPaused)]: null
//       },
//       _events: [Object: null prototype] { end: [Function: onReadableStreamEnd] },
//       _eventsCount: 1,
//       _maxListeners: undefined,
//       _writableState: WritableState {
//         objectMode: false,
//         highWaterMark: 16384,
//         finalCalled: false,
//         needDrain: false,
//         ending: false,
//         ended: false,
//         finished: false,
//         destroyed: false,
//         decodeStrings: false,
//         defaultEncoding: 'utf8',
//         length: 0,
//         writing: false,
//         corked: 0,
//         sync: true,
//         bufferProcessing: false,
//         onwrite: [Function: bound onwrite],
//         writecb: null,
//         writelen: 0,
//         afterWriteTickInfo: null,
//         buffered: [],
//         bufferedIndex: 0,
//         allBuffers: true,
//         allNoop: true,
//         pendingcb: 0,
//         constructed: true,
//         prefinished: false,
//         errorEmitted: false,
//         emitClose: false,
//         autoDestroy: true,
//         errored: null,
//         closed: false,
//         closeEmitted: false,
//         [Symbol(kOnFinished)]: []
//       },
//       allowHalfOpen: false,
//       _sockname: null,
//       _pendingData: null,
//       _pendingEncoding: '',
//       server: null,
//       _server: null,
//       [Symbol(async_id_symbol)]: -1,
//       [Symbol(kHandle)]: null,
//       [Symbol(lastWriteQueueSize)]: 0,
//       [Symbol(timeout)]: null,
//       [Symbol(kBuffer)]: null,
//       [Symbol(kBufferCb)]: null,
//       [Symbol(kBufferGen)]: null,
//       [Symbol(kCapture)]: false,
//       [Symbol(kSetNoDelay)]: false,
//       [Symbol(kSetKeepAlive)]: false,
//       [Symbol(kSetKeepAliveInitialDelay)]: 0,
//       [Symbol(kBytesRead)]: 0,
//       [Symbol(kBytesWritten)]: 0
//     },
//     [Symbol(kCapture)]: false
//   }
const printer = new escpos.Printer(networkDevice);
console.log(printer);
// Printer {
//     _events: [Object: null prototype] {},
//     _eventsCount: 0,
//     _maxListeners: undefined,
//     adapter: Network {
//       _events: [Object: null prototype] {},
//       _eventsCount: 0,
//       _maxListeners: undefined,
//       address: '192.168.1.175',
//       port: 8080,
//       device: Socket {
//         connecting: false,
//         _hadError: false,
//         _parent: null,
//         _host: null,
//         _closeAfterHandlingError: false,
//         _readableState: [ReadableState],
//         _events: [Object: null prototype],
//         _eventsCount: 1,
//         _maxListeners: undefined,
//         _writableState: [WritableState],
//         allowHalfOpen: false,
//         _sockname: null,
//         _pendingData: null,
//         _pendingEncoding: '',
//         server: null,
//         _server: null,
//         [Symbol(async_id_symbol)]: -1,
//         [Symbol(kHandle)]: null,
//         [Symbol(lastWriteQueueSize)]: 0,
//         [Symbol(timeout)]: null,
//         [Symbol(kBuffer)]: null,
//         [Symbol(kBufferCb)]: null,
//         [Symbol(kBufferGen)]: null,
//         [Symbol(kCapture)]: false,
//         [Symbol(kSetNoDelay)]: false,
//         [Symbol(kSetKeepAlive)]: false,
//         [Symbol(kSetKeepAliveInitialDelay)]: 0,
//         [Symbol(kBytesRead)]: 0,
//         [Symbol(kBytesWritten)]: 0
//       },
//       [Symbol(kCapture)]: false
//     },
//     options: undefined,
//     buffer: MutableBuffer {
//       _initialSize: 1024,
//       _blockSize: 1024,
//       _buffer: <Buffer 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 ... 974 more bytes>,
//       _size: 0
//     },
//     encoding: 'GB18030',
//     width: 48,
//     _model: null,
//     [Symbol(kCapture)]: false
//   }